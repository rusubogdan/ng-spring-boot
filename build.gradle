buildscript {
	ext {
		springBootVersion = '1.4.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

group = 'tubbynl'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'docker'

jar {
	baseName = 'todo'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
	compile.exclude module: "spring-boot-starter-tomcat"
	compile.exclude module: "tomcat-jdbc"
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile("org.springframework.boot:spring-boot-starter-undertow")
	compile group: 'com.zaxxer', name: 'HikariCP'
	compile group: 'org.webjars.bower', name: 'angular', version:'1.5.8'
	compile group: 'org.webjars.bower', name: 'angular-resource', version:'1.5.8'
	compile group: 'org.webjars.bower', name: 'bootstrap-css-only', version:'3.3.6'
	compile group: 'org.webjars.bower', name: 'lodash', version:'3.10.1'
	runtime('com.h2database:h2')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task buildDocker(type: Docker, dependsOn: build) {
	push = true
	applicationName = jar.baseName
	dockerfile = file('src/main/docker/Dockerfile')
	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
}